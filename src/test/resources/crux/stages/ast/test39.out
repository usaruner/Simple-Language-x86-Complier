ast.DeclarationList(3)
  ast.FunctionDefinition(3)[Symbol(test), [Symbol(a), Symbol(b)]]
    ast.StatementList(4)
      ast.Call(4)[Symbol(printInt)]
        ast.OpExpr(4)[ADD]
          ast.Dereference(4)
            ast.Name(4)[a]
          ast.Dereference(4)
            ast.Name(4)[b]
      ast.Call(5)[Symbol(println)]
      ast.Call(6)[Symbol(printInt)]
        ast.OpExpr(6)[SUB]
          ast.Dereference(6)
            ast.Name(6)[a]
          ast.Dereference(6)
            ast.Name(6)[b]
      ast.Call(7)[Symbol(println)]
      ast.Call(8)[Symbol(printInt)]
        ast.OpExpr(8)[MULT]
          ast.Dereference(8)
            ast.Name(8)[a]
          ast.Dereference(8)
            ast.Name(8)[b]
      ast.Call(9)[Symbol(println)]
      ast.IfElseBranch(10)
        ast.OpExpr(10)[NE]
          ast.Dereference(10)
            ast.Name(10)[b]
          ast.LiteralInt(10)[0]
        ast.StatementList(11)
          ast.Call(11)[Symbol(printInt)]
            ast.OpExpr(11)[DIV]
              ast.Dereference(11)
                ast.Name(11)[a]
              ast.Dereference(11)
                ast.Name(11)[b]
          ast.Call(12)[Symbol(println)]
        ast.StatementList(14)
          ast.Call(14)[Symbol(println)]
  ast.FunctionDefinition(18)[Symbol(main), []]
    ast.StatementList(19)
      ast.VariableDeclaration(19)[Symbol(i)]
      ast.VariableDeclaration(20)[Symbol(j)]
      ast.Assignment(21)
        ast.Name(21)[i]
        ast.LiteralInt(21)[0]
      ast.WhileLoop(22)
        ast.OpExpr(22)[LE]
          ast.Dereference(22)
            ast.Name(22)[i]
          ast.LiteralInt(22)[10]
        ast.StatementList(23)
          ast.Assignment(23)
            ast.Name(23)[j]
            ast.LiteralInt(23)[0]
          ast.WhileLoop(24)
            ast.OpExpr(24)[LE]
              ast.Dereference(24)
                ast.Name(24)[j]
              ast.LiteralInt(24)[10]
            ast.StatementList(25)
              ast.Call(25)[Symbol(test)]
                ast.Dereference(25)
                  ast.Name(25)[i]
                ast.Dereference(25)
                  ast.Name(25)[j]
              ast.Assignment(26)
                ast.Name(26)[j]
                ast.OpExpr(26)[ADD]
                  ast.Dereference(26)
                    ast.Name(26)[j]
                  ast.LiteralInt(26)[1]
          ast.Assignment(28)
            ast.Name(28)[i]
            ast.OpExpr(28)[ADD]
              ast.Dereference(28)
                ast.Name(28)[i]
              ast.LiteralInt(28)[1]
