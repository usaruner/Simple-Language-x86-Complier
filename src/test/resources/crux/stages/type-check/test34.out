Crux Program has no type errors.
ast.DeclarationList(4)
  ast.FunctionDefinition(4)[Symbol(main:func(TypeList()):void), []]
    ast.StatementList(5)
      void: ast.Call(5)[Symbol(printInt)]
        int: ast.OpExpr(5)[ADD]
          int: ast.OpExpr(5)[MULT]
            int: ast.LiteralInt(5)[3]
            int: ast.LiteralInt(5)[5]
          int: ast.LiteralInt(5)[7]
      void: ast.Call(6)[Symbol(println)]
      void: ast.Call(7)[Symbol(printInt)]
        int: ast.OpExpr(7)[ADD]
          int: ast.LiteralInt(7)[3]
          int: ast.OpExpr(7)[MULT]
            int: ast.LiteralInt(7)[5]
            int: ast.LiteralInt(7)[7]
      void: ast.Call(8)[Symbol(println)]
      void: ast.Call(9)[Symbol(printInt)]
        int: ast.OpExpr(9)[SUB]
          int: ast.OpExpr(9)[ADD]
            int: ast.LiteralInt(9)[3]
            int: ast.LiteralInt(9)[5]
          int: ast.LiteralInt(9)[7]
      void: ast.Call(10)[Symbol(println)]
      void: ast.Call(11)[Symbol(printInt)]
        int: ast.OpExpr(11)[ADD]
          int: ast.OpExpr(11)[SUB]
            int: ast.LiteralInt(11)[3]
            int: ast.LiteralInt(11)[5]
          int: ast.LiteralInt(11)[7]
      void: ast.Call(12)[Symbol(println)]
      void: ast.Call(13)[Symbol(printInt)]
        int: ast.OpExpr(13)[ADD]
          int: ast.OpExpr(13)[DIV]
            int: ast.LiteralInt(13)[3]
            int: ast.LiteralInt(13)[5]
          int: ast.LiteralInt(13)[7]
      void: ast.Call(14)[Symbol(println)]
      void: ast.Call(15)[Symbol(printInt)]
        int: ast.OpExpr(15)[MULT]
          int: ast.OpExpr(15)[DIV]
            int: ast.LiteralInt(15)[3]
            int: ast.LiteralInt(15)[5]
          int: ast.LiteralInt(15)[7]
      void: ast.Call(16)[Symbol(println)]
      void: ast.Call(17)[Symbol(printInt)]
        int: ast.OpExpr(17)[ADD]
          int: ast.LiteralInt(17)[3]
          int: ast.OpExpr(17)[DIV]
            int: ast.LiteralInt(17)[5]
            int: ast.LiteralInt(17)[7]
      void: ast.Call(18)[Symbol(println)]
      void: ast.Call(19)[Symbol(printInt)]
        int: ast.OpExpr(19)[MULT]
          int: ast.OpExpr(19)[ADD]
            int: ast.LiteralInt(19)[3]
            int: ast.LiteralInt(19)[5]
          int: ast.LiteralInt(19)[7]
      void: ast.Call(20)[Symbol(println)]
      void: ast.Call(21)[Symbol(printInt)]
        int: ast.OpExpr(21)[ADD]
          int: ast.OpExpr(21)[SUB]
            int: ast.LiteralInt(21)[3]
            int: ast.LiteralInt(21)[5]
          int: ast.LiteralInt(21)[7]
      void: ast.Call(22)[Symbol(println)]
      void: ast.Call(23)[Symbol(printInt)]
        int: ast.OpExpr(23)[ADD]
          int: ast.OpExpr(23)[MULT]
            int: ast.LiteralInt(23)[2]
            int: ast.LiteralInt(23)[3]
          int: ast.OpExpr(23)[DIV]
            int: ast.LiteralInt(23)[10]
            int: ast.LiteralInt(23)[2]
      void: ast.Call(24)[Symbol(println)]
      void: ast.Call(25)[Symbol(printInt)]
        int: ast.OpExpr(25)[ADD]
          int: ast.OpExpr(25)[SUB]
            int: ast.LiteralInt(25)[5]
            int: ast.LiteralInt(25)[3]
          int: ast.LiteralInt(25)[2]
      void: ast.Call(26)[Symbol(println)]
